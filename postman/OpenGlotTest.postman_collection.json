{
	"info": {
		"_postman_id": "b4841187-3a7f-4110-a5e5-511394f03ef4",
		"name": "OpenGlotTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26701309"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Get auth token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var clientId = pm.environment.get(\"client_id\");",
									"var username = pm.environment.get(\"cognito_username\");",
									"var password = pm.environment.get(\"cognito_password\");",
									"pm.sendRequest({",
									"           url: \"https://cognito-idp.us-east-1.amazonaws.com/\",",
									"           method: 'POST',",
									"           header: {",
									"                    'X-Amz-Target':   'AWSCognitoIdentityProviderService.InitiateAuth',",
									"                    'Content-Type': 'application/x-amz-json-1.1'",
									"                   },",
									"            body: {",
									"                   mode: 'raw',",
									"                   raw: JSON.stringify({",
									"                   \"AuthParameters\": {",
									"                   \"USERNAME\": username,",
									"                   \"PASSWORD\": password",
									"                   },",
									"                  \"AuthFlow\": \"USER_PASSWORD_AUTH\",",
									"                  \"ClientId\": clientId",
									"  }),",
									"options: {",
									"raw: {",
									"language: 'json'",
									"}",
									"}",
									"}",
									"}, function (error, response) {",
									"pm.environment.set(\"cognitoAccessToken\", response.json().AuthenticationResult.AccessToken);",
									"pm.environment.set(\"cognitoIdToken\", response.json().AuthenticationResult.IdToken);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/users",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify User Not Registered",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost/api/users/login",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n    \"username\": \"string\",\n    \"email\": \"string\",\n    \"nativeLanguage\": \"string\",\n    \"targetLanguage\": \"string\",\n    \"targetLanguageLevel\": \"string\",\n    \"targetLanguage2\": \"string\",\n    \"targetLanguageLevel2\": \"string\",\n    \"targetLanguage3\": \"string\",\n    \"targetLanguageLevel3\": \"string\",\n    \"dateOfBirth\": \"2024-06-26T11:19:07.599Z\",\n    \"timeZone\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/users/register",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check user register state",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost/api/users/login",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test('Response body contains required fields', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    if (jsonData.length > 0) {",
									"        jsonData.forEach(function(user) {",
									"            pm.expect(user).to.have.property('userId');",
									"            pm.expect(user).to.have.property('username');",
									"            pm.expect(user).to.have.property('email');",
									"            pm.expect(user).to.have.property('nativeLanguage');",
									"            pm.expect(user).to.have.property('targetLanguage');",
									"            pm.expect(user).to.have.property('targetLanguageLevel');",
									"            pm.expect(user).to.have.property('targetLanguage2');",
									"            pm.expect(user).to.have.property('targetLanguageLevel2');",
									"            pm.expect(user).to.have.property('targetLanguage3');",
									"            pm.expect(user).to.have.property('targetLanguageLevel3');",
									"            pm.expect(user).to.have.property('dateOfBirth');",
									"            pm.expect(user).to.have.property('timeZone');",
									"            pm.expect(user).to.have.property('userRole');",
									"            pm.expect(user).to.have.property('ratings');",
									"            pm.expect(user).to.have.property('progresses');",
									"            pm.expect(user).to.have.property('badges');",
									"            pm.expect(user).to.have.property('notifications');",
									"            pm.expect(user).to.have.property('flashcards');",
									"            pm.expect(user).to.have.property('userGeneratedContents');",
									"            pm.expect(user).to.have.property('subscription');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/users",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"user_id\", jsonData.userId);",
									"pm.environment.set(\"user_name\", jsonData.username);",
									"pm.environment.set(\"user_email\", jsonData.email);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"999\",\n    \"username\": \"user999\",\n    \"email\": \"abcd@gmail.com\",\n    \"nativeLanguage\": \"English\",\n    \"targetLanguage\": \"Spanish\",\n    \"targetLanguageLevel\": \"Beginner\",\n    \"targetLanguage2\": null,\n    \"targetLanguageLevel2\": null,\n    \"targetLanguage3\": null,\n    \"targetLanguageLevel3\": null,\n    \"dateOfBirth\": \"2000-01-01T00:00:00Z\",\n    \"timeZone\": \"UTC\",\n    \"userRole\": 0,\n    \"ratings\": null,\n    \"progresses\": null,\n    \"badges\": null,\n    \"notifications\": null,\n    \"flashcards\": null,\n    \"userGeneratedContents\": null,\n    \"subscription\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/users",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify User Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test('Response body contains required fields', function () {  ",
									"    pm.expect(jsonData).to.have.property('userId');",
									"    pm.expect(jsonData).to.have.property('username');",
									"    pm.expect(jsonData).to.have.property('email');",
									"    pm.expect(jsonData).to.have.property('nativeLanguage');",
									"    pm.expect(jsonData).to.have.property('targetLanguage');",
									"    pm.expect(jsonData).to.have.property('targetLanguageLevel');",
									"    pm.expect(jsonData).to.have.property('targetLanguage2');",
									"    pm.expect(jsonData).to.have.property('targetLanguageLevel2');",
									"    pm.expect(jsonData).to.have.property('targetLanguage3');",
									"    pm.expect(jsonData).to.have.property('targetLanguageLevel3');",
									"    pm.expect(jsonData).to.have.property('dateOfBirth');",
									"    pm.expect(jsonData).to.have.property('timeZone');",
									"    pm.expect(jsonData).to.have.property('userRole');",
									"    pm.expect(jsonData).to.have.property('ratings');",
									"    pm.expect(jsonData).to.have.property('progresses');",
									"    pm.expect(jsonData).to.have.property('badges');",
									"    pm.expect(jsonData).to.have.property('notifications');",
									"    pm.expect(jsonData).to.have.property('flashcards');",
									"    pm.expect(jsonData).to.have.property('userGeneratedContents');",
									"    pm.expect(jsonData).to.have.property('subscription');",
									"});",
									"",
									"pm.test(\"Username is correct\", function () {",
									"    pm.expect(jsonData.username).to.eql('user999');",
									"});",
									"",
									"pm.test(\"User email is correct\", function () {",
									"    pm.expect(jsonData.email).to.eql('abcd@gmail.com');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/users/{{user_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"999\",\n    \"username\": \"Updated user999\",\n    \"email\": \"updated_abcd@gmail.com\",\n    \"nativeLanguage\": \"English\",\n    \"targetLanguage\": \"Spanish\",\n    \"targetLanguageLevel\": \"Beginner\",\n    \"targetLanguage2\": null,\n    \"targetLanguageLevel2\": null,\n    \"targetLanguage3\": null,\n    \"targetLanguageLevel3\": null,\n    \"dateOfBirth\": \"2000-01-01T00:00:00Z\",\n    \"timeZone\": \"UTC\",\n    \"userRole\": 0,\n    \"ratings\": null,\n    \"progresses\": null,\n    \"badges\": null,\n    \"notifications\": null,\n    \"flashcards\": null,\n    \"userGeneratedContents\": null,\n    \"subscription\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/users/{{user_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify user update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"Username is updated correctly\", function () {",
									"    pm.expect(jsonData.username).to.eql(\"Updated user999\");",
									"});",
									"",
									"pm.test(\"Email is updated correctly\", function () {",
									"    pm.expect(jsonData.email).to.eql(\"updated_abcd@gmail.com\");",
									"});",
									"",
									"pm.test(\"Date of birth is correct\", function () {",
									"    pm.expect(jsonData.dateOfBirth).to.eql(\"2000-01-01T00:00:00Z\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/users/{{user_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/users/{{user_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify User Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/users/{{user_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Courses",
			"item": [
				{
					"name": "Get All Courses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test('Response body contains required fields', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    if (jsonData.length > 0) {",
									"        jsonData.forEach(function(item) {",
									"            pm.expect(item).to.have.property('id');",
									"            pm.expect(item).to.have.property('title');",
									"            pm.expect(item).to.have.property('languageId');",
									"            pm.expect(item).to.have.property('language');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Courses",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Courses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"course_id\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 999,\n    \"title\": \"Course 999 for 999\",\n    \"description\": \"Description 999\",\n    \"languageId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/Courses",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Courses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Course Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test('Response body contains required fields', function () {",
									"    pm.expect(jsonData).to.be.an('object');",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('title');",
									"    pm.expect(jsonData).to.have.property('languageId');",
									"    pm.expect(jsonData).to.have.property('language');",
									"});",
									"",
									"pm.test(\"Course title is correct\", function () {",
									"    pm.expect(jsonData.title).to.eql(\"Course 999 for 999\");",
									"});",
									"",
									"pm.test(\"Course description is correct\", function () {",
									"    pm.expect(jsonData.description).to.eql(\"Description 999\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Courses/{{course_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Courses",
								"{{course_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 999,\n    \"title\": \"Updated course 999 for 999\",\n    \"description\": \"Updated description 999\",\n    \"languageId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/Courses/{{course_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Courses",
								"{{course_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": " Verify Course Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"Course title is updated correctly\", function () {",
									"    pm.expect(jsonData.title).to.eql(\"Updated course 999 for 999\");",
									"});",
									"",
									"pm.test(\"Course description is updated correctly\", function () {",
									"    pm.expect(jsonData.description).to.eql(\"Updated description 999\");",
									"});",
									"",
									"pm.test(\"Course languageId is correct\", function () {",
									"    pm.expect(jsonData.languageId).to.eql(1);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/Courses/{{course_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Courses",
								"{{course_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Courses/{{course_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Courses",
								"{{course_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Course Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Courses/{{course_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Courses",
								"{{course_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Lessons",
			"item": [
				{
					"name": "Get All Lessons",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.request.headers.add({ key: 'Authorization', value: 'Bearer ' + pm.environment.get('jwt') });",
									"",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.test('Response body contains required fields', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    if (jsonData.length > 0) {",
									"        jsonData.forEach(function(item) {",
									"        pm.expect(item).to.have.property('id');",
									"        pm.expect(item).to.have.property('title');",
									"        pm.expect(item).to.have.property('contentType');",
									"        pm.expect(item).to.have.property('createdAt');",
									"        pm.expect(item).to.have.property('moduleId');",
									"        pm.expect(item).to.have.property('module');",
									"        pm.expect(item).to.have.property('questions');",
									"        pm.expect(item).to.have.property('ratings');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Lessons",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Lessons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Lesson",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"lesson_id\", jsonData.id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n     \"id\": 999,\n    \"title\": \"Lesson 999 for 999\",\n    \"contentType\": 3,\n    \"moduleId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/Lessons",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Lessons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Lesson Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test('Response body contains required fields', function () { ",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('title');",
									"    pm.expect(jsonData).to.have.property('contentType');",
									"    pm.expect(jsonData).to.have.property('createdAt');",
									"    pm.expect(jsonData).to.have.property('moduleId');",
									"    pm.expect(jsonData).to.have.property('module');",
									"    pm.expect(jsonData).to.have.property('questions');",
									"    pm.expect(jsonData).to.have.property('ratings');",
									"});",
									"",
									"pm.test(\"Lesson title is correct\", function () {",
									"    pm.expect(jsonData.title).to.eql(\"Lesson 999 for 999\");",
									"});",
									"",
									"pm.test(\"Content type is correct\", function () {",
									"    pm.expect(jsonData.contentType).to.eql(3);",
									"});",
									"",
									"pm.test(\"Module ID is correct\", function () {",
									"    pm.expect(jsonData.moduleId).to.eql(1);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Lessons/{{lesson_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Lessons",
								"{{lesson_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Lesson",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 999,\n    \"title\": \"Updated Lesson 999 for 999\",\n    \"contentType\": 4,\n    \"moduleId\": 1\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/Lessons/{{lesson_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Lessons",
								"{{lesson_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Lesson Update ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"Lesson title is updated correctly\", function () {",
									"    pm.expect(jsonData.title).to.eql(\"Updated Lesson 999 for 999\");",
									"});",
									"",
									"pm.test(\"Content type is updated correctly\", function () {",
									"    pm.expect(jsonData.contentType).to.eql(4);",
									"});",
									"",
									"pm.test(\"Module ID is correct\", function () {",
									"    pm.expect(jsonData.moduleId).to.eql(1);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Lessons/{{lesson_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Lessons",
								"{{lesson_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Lesson",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Lessons/{{lesson_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Lessons",
								"{{lesson_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Lesson Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Lessons/{{lesson_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Lessons",
								"{{lesson_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Languages",
			"item": [
				{
					"name": "Get All Languages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test('Response body contains required fields', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    if (jsonData.length > 0) {",
									"        jsonData.forEach(function(item) {",
									"            pm.expect(item).to.have.property('id');",
									"            pm.expect(item).to.have.property('name');",
									"            pm.expect(item).to.have.property('description');",
									"            pm.expect(item).to.have.property('courses');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Languages",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Languages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"language_id\", jsonData.id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 999,\n    \"name\": \"Whatever\",\n    \"code\": \"zh\",\n    \"description\": \"Chinese Language\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/Languages",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Languages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Language Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test('Response body contains required fields', function () {",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('name');",
									"    pm.expect(jsonData).to.have.property('description');",
									"    pm.expect(jsonData).to.have.property('courses');",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"Language ID is correct\", function () {",
									"    pm.expect(jsonData.id).to.eql(999);",
									"});",
									"",
									"pm.test(\"Language name is correct\", function () {",
									"    pm.expect(jsonData.name).to.eql(\"Whatever\");",
									"});",
									"",
									"pm.test(\"Language code is correct\", function () {",
									"    pm.expect(jsonData.code).to.eql(\"zh\");",
									"});",
									"",
									"pm.test(\"Language description is correct\", function () {",
									"    pm.expect(jsonData.description).to.eql(\"Chinese Language\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Languages/{{language_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Languages",
								"{{language_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 999,\n    \"name\": \"Updated Whatever\",\n    \"code\": \"zh\",\n    \"description\": \"Updated Chinese Language\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/Languages/{{language_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Languages",
								"{{language_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Language Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"Language name is updated correctly\", function () {",
									"    pm.expect(jsonData.name).to.eql(\"Updated Whatever\");",
									"});",
									"",
									"pm.test(\"Language code is correct\", function () {",
									"    pm.expect(jsonData.code).to.eql(\"zh\");",
									"});",
									"",
									"pm.test(\"Language description is updated correctly\", function () {",
									"    pm.expect(jsonData.description).to.eql(\"Updated Chinese Language\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Languages/{{language_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Languages",
								"{{language_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/Languages/{{language_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Languages",
								"{{language_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Language Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Languages/{{language_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Languages",
								"{{language_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Modules",
			"item": [
				{
					"name": "Get All Modules",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test('Response body contains required fields', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    if (jsonData.length > 0) {",
									"        jsonData.forEach(function(item) {",
									"            pm.expect(item).to.have.property('id');",
									"            pm.expect(item).to.have.property('title');",
									"            pm.expect(item).to.have.property('courseId');",
									"            pm.expect(item).to.have.property('course');",
									"            pm.expect(item).to.have.property('lessons');",
									"            pm.expect(item).to.have.property('progresses');",
									"            pm.expect(item).to.have.property('ratings');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Modules",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Modules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Module",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"module_id\", jsonData.id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"id\": 999,\n        \"title\": \"Module 999 for 999\",\n        \"description\": \"Module Description 999\",\n        \"courseId\": 20,\n        \"course\": null,\n        \"lessons\": null,\n        \"progresses\": null,\n        \"ratings\": null\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/Modules",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Modules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Module Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test('Response body contains required fields', function () {  ",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('title');",
									"    pm.expect(jsonData).to.have.property('courseId');",
									"    pm.expect(jsonData).to.have.property('course');",
									"    pm.expect(jsonData).to.have.property('lessons');",
									"    pm.expect(jsonData).to.have.property('progresses');",
									"    pm.expect(jsonData).to.have.property('ratings');",
									"});",
									"",
									"pm.test(\"Module title is correct\", function () {",
									"    pm.expect(jsonData.title).to.eql(\"Module 999 for 999\");",
									"});",
									"",
									"pm.test(\"Module description is correct\", function () {",
									"    pm.expect(jsonData.description).to.eql(\"Module Description 999\");",
									"});",
									"",
									"pm.test(\"Course ID is correct\", function () {",
									"    pm.expect(jsonData.courseId).to.eql(20);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cognitoIdToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Modules/{{module_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Modules",
								"{{module_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Module",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 999,\n    \"title\": \"Updated Module 999 for 999\",\n    \"description\": \"Updated Module Description 999\",\n    \"courseId\": 20,\n    \"course\": null,\n    \"lessons\": null,\n    \"progresses\": null,\n    \"ratings\": null\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/Modules/{{module_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Modules",
								"{{module_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Module Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"Module title is updated correctly\", function () {",
									"    pm.expect(jsonData.title).to.eql(\"Updated Module 999 for 999\");",
									"});",
									"",
									"pm.test(\"Module description is updated correctly\", function () {",
									"    pm.expect(jsonData.description).to.eql(\"Updated Module Description 999\");",
									"});",
									"",
									"pm.test(\"Course ID is correct\", function () {",
									"    pm.expect(jsonData.courseId).to.eql(20);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Modules/{{module_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Modules",
								"{{module_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Module",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Modules/{{module_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Modules",
								"{{module_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Module Deletion ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/Modules/{{module_id}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Modules",
								"{{module_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Utils",
			"item": [
				{
					"name": "Health check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test('Response body is healthy', function () {",
									"    pm.expect(pm.response.text()).to.include('Healthy');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/health",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}